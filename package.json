{
	"name": "media-experiments",
	"version": "0.0.3",
	"private": true,
	"description": "WordPress media experiments",
	"author": "",
	"license": "GPL-2.0-or-later",
	"keywords": [
		"wordpress",
		"gutenberg",
		"media"
	],
	"homepage": "https://github.com/swissspidy/media-experiments",
	"repository": {
		"type": "git",
		"url": "https://github.com/swissspidy/media-experiments.git"
	},
	"bugs": {
		"url": "https://github.com/swissspidy/media-experiments/issues"
	},
	"engines": {
		"node": ">=20"
	},
	"workspaces": {
		"packages": [
			"packages/*"
		]
	},
	"dependencies": {},
	"devDependencies": {
		"@playwright/test": "^1.45.3",
		"@shopify/web-worker": "^6.3.0",
		"@testing-library/jest-dom": "^6.4.8",
		"@testing-library/react": "^16.0.0",
		"@types/jest": "^29.5.12",
		"@types/mime": "^3.0.4",
		"@types/node": "^22.0.0",
		"@types/uuid": "^10.0.0",
		"@types/wordpress__blocks": "^12.5.14",
		"@wordpress/dependency-extraction-webpack-plugin": "^6.4.0",
		"@wordpress/docgen": "^2.4.0",
		"@wordpress/env": "^10.4.0",
		"@wordpress/eslint-plugin": "^20.1.0",
		"@wordpress/scripts": "^28.4.0",
		"@wp-now/wp-now": "^0.1.74",
		"eslint": "^8.57.0",
		"eslint-plugin-oxlint": "^0.5.0",
		"mini-css-extract-plugin": "^2.9.0",
		"monocart-reporter": "^2.6.2",
		"npm-run-all": "^4.1.5",
		"oxlint": "^0.7.0",
		"patch-package": "^8.0.0",
		"prettier": "npm:wp-prettier@3.0.3",
		"typescript": "^5.5.4",
		"uuid": "^10.0.0",
		"webpack": "^5.93.0",
		"webpack-cli": "^5.1.4",
		"webpack-virtual-modules": "^0.6.2"
	},
	"overrides": {
		"@wordpress/components": "^28.3.0",
		"@wordpress/data": "^10.3.0",
		"playwright-core": "^1.44.0",
		"@playwright/test": "$@playwright/test"
	},
	"scripts": {
		"postinstall": "patch-package",
		"build": "wp-scripts build",
		"build:package-types": "tsc --build",
		"build:docs": "npm-run-all --parallel build:docs:*",
		"build:docs:ffmpeg": "docgen packages/ffmpeg/src/index.ts --output packages/ffmpeg/README.md --to-token --use-token \"Autogenerated API docs\"",
		"build:docs:heif": "docgen packages/heif/src/index.ts --output packages/heif/README.md --to-token --use-token \"Autogenerated API docs\"",
		"build:docs:interface": "npm-run-all build:docs:interface:*",
		"build:docs:interface:actions": "docgen packages/interface/src/store/actions.ts --output packages/interface/README.md --to-token --use-token \"Autogenerated actions|src/store/actions.ts\"",
		"build:docs:interface:selectors": "docgen packages/interface/src/store/selectors.ts --output packages/interface/README.md --to-token --use-token \"Autogenerated selectors|src/store/selectors.ts\"",
		"build:docs:log": "docgen packages/log/src/index.ts --output packages/log/README.md --to-token --use-token \"Autogenerated API docs\"",
		"build:docs:media-recording": "npm-run-all build:docs:media-recording:*",
		"build:docs:media-recording:actions": "docgen packages/media-recording/src/store/actions.ts --output packages/media-recording/README.md --to-token --use-token \"Autogenerated actions|src/store/actions.ts\"",
		"build:docs:media-recording:selectors": "docgen packages/media-recording/src/store/selectors.ts --output packages/media-recording/README.md --to-token --use-token \"Autogenerated selectors|src/store/selectors.ts\"",
		"build:docs:media-utils": "docgen packages/media-utils/src/index.ts --output packages/media-utils/README.md --to-token --use-token \"Autogenerated API docs\"",
		"build:docs:mime": "docgen packages/mime/src/index.ts --output packages/mime/README.md --to-token --use-token \"Autogenerated API docs\"",
		"build:docs:pdf": "docgen packages/pdf/src/index.ts --output packages/pdf/README.md --to-token --use-token \"Autogenerated API docs\"",
		"build:docs:subtitles": "docgen packages/subtitles/src/index.ts --output packages/subtitles/README.md --to-token --use-token \"Autogenerated API docs\"",
		"build:docs:upload-media": "npm-run-all build:docs:upload-media:*",
		"build:docs:upload-media:actions": "docgen packages/upload-media/src/store/actions.ts --output packages/upload-media/README.md --to-token --use-token \"Autogenerated actions|src/store/actions.ts\"",
		"build:docs:upload-media:private-actions": "docgen packages/upload-media/src/store/private-actions.ts --output packages/upload-media/README.md --to-token --use-token \"Autogenerated actions|src/store/private-actions.ts\"",
		"build:docs:upload-media:selectors": "docgen packages/upload-media/src/store/selectors.ts --output packages/upload-media/README.md --to-token --use-token \"Autogenerated selectors|src/store/selectors.ts\"",
		"build:docs:upload-media:private-selectors": "docgen packages/upload-media/src/store/private-selectors.ts --output packages/upload-media/README.md --to-token --use-token \"Autogenerated selectors|src/store/private-selectors.ts\"",
		"build:docs:vips": "docgen packages/vips/src/index.ts --output packages/vips/README.md --to-token --use-token \"Autogenerated API docs\"",
		"format": "wp-scripts format",
		"lint:css": "wp-scripts lint-style",
		"lint:js": "oxlint --quiet -c=.oxlintrc.json --tsconfig=tsconfig.json --ignore-pattern=@types --jest-plugin --promise-plugin --react-perf-plugin --import-plugin --jsdoc-plugin && wp-scripts lint-js",
		"lint:js:fix": "oxlint --quiet -c=.oxlintrc.json --tsconfig=tsconfig.json --ignore-pattern=@types --jest-plugin --promise-plugin --react-perf-plugin --import-plugin --jsdoc-plugin --fix && wp-scripts lint-js --fix",
		"lint:md:docs": "wp-scripts lint-md-docs",
		"lint:md:js": "wp-scripts lint-md-js",
		"lint:pkg-json": "wp-scripts lint-pkg-json",
		"start": "wp-scripts start",
		"start:hot": "wp-scripts start --hot",
		"test:e2e": "wp-scripts test-playwright --config tests/e2e/playwright.config.ts",
		"test:unit": "wp-scripts test-unit-js",
		"test:unit:help": "wp-scripts test-unit-js --help",
		"test:unit:watch": "wp-scripts test-unit-js --watch",
		"test:unit:debug": "wp-scripts --inspect-brk test-unit-js --runInBand --no-cache",
		"wp-env": "wp-env",
		"wp-now": "wp-now start --port=8889 --php=8.2 --blueprint=blueprints/wp-now.json"
	}
}
