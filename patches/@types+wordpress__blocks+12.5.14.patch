diff --git a/node_modules/@types/wordpress__blocks/index.d.ts b/node_modules/@types/wordpress__blocks/index.d.ts
index 6bfba5e..e1683f6 100644
--- a/node_modules/@types/wordpress__blocks/index.d.ts
+++ b/node_modules/@types/wordpress__blocks/index.d.ts
@@ -1,7 +1,7 @@
 import { IconType } from "@wordpress/components";
-import { StoreDescriptor } from "@wordpress/data";
 import { ShortcodeMatch } from "@wordpress/shortcode";
 import { ComponentType, ReactElement } from "react";
+import { ReduxStoreConfig, StoreDescriptor } from '@wordpress/data/build-types/types';

 export * from "./api";
 export { withBlockContentContext } from "./block-content-provider";
@@ -11,13 +11,17 @@ declare module "@wordpress/data" {
     function select(key: "core/blocks"): typeof import("./store/selectors");
 }

-export interface BlocksStoreDescriptor extends StoreDescriptor {
-    name: "core/blocks";
-}
-
 // eslint-disable-next-line @definitelytyped/no-declare-current-package
 declare module "@wordpress/blocks" {
-    const store: BlocksStoreDescriptor;
+	const store: {
+		name: 'core/blocks';
+	} & StoreDescriptor<
+		ReduxStoreConfig<
+			unknown,
+			typeof import('./store/actions'),
+			typeof import('./store/selectors')
+		>
+	>;
 }

 export type AxialDirection = "horizontal" | "vertical";
@@ -294,6 +298,7 @@ export interface Block<T extends Record<string, any> = {}> {
      * @see {@link https://developer.wordpress.org/block-editor/reference-guides/block-api/block-metadata/#context}
      */
     readonly usesContext?: string[];
+	readonly variations?: BlockVariation<T>[];
     /**
      * The current version number of the block, such as 1.0 or 1.0.3.
      *
diff --git a/node_modules/@types/wordpress__blocks/store/selectors.d.ts b/node_modules/@types/wordpress__blocks/store/selectors.d.ts
index 892c09e..c979564 100644
--- a/node_modules/@types/wordpress__blocks/store/selectors.d.ts
+++ b/node_modules/@types/wordpress__blocks/store/selectors.d.ts
@@ -1,4 +1,5 @@
 import { Block, BlockStyle } from "../";
+import { BlockAttributes, BlockVariation, BlockVariationScope } from '@wordpress/blocks';

 export {
     getBlockSupport,
@@ -33,3 +34,8 @@ export function getUnregisteredFallbackBlockName(): string | undefined;
  * search term, or false otherwise.
  */
 export function isMatchingSearchTerm(nameOrType: string | Block<any>, searchTerm: string): boolean;
+
+/**
+ * Returns the active block variation for a given block based on its attributes.
+ */
+export function getActiveBlockVariation( state: any, blockName: string, attributes: BlockAttributes, scope?: BlockVariationScope ): BlockVariation | undefined;
