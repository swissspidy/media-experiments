diff --git a/node_modules/@types/wordpress__blocks/index.d.ts b/node_modules/@types/wordpress__blocks/index.d.ts
index de142a4..a23842e 100644
--- a/node_modules/@types/wordpress__blocks/index.d.ts
+++ b/node_modules/@types/wordpress__blocks/index.d.ts
@@ -1,5 +1,5 @@
 import { IconType } from "@wordpress/components";
-import { StoreDescriptor } from "@wordpress/data";
+import { ReduxStoreConfig, StoreDescriptor } from '@wordpress/data/build-types/types';
 import { ShortcodeMatch } from "@wordpress/shortcode";
 import { ComponentType, ReactElement } from "react";
 
@@ -11,11 +11,15 @@ declare module "@wordpress/data" {
     function select(key: "core/blocks"): typeof import("./store/selectors");
 }
 
-export interface BlocksStoreDescriptor extends StoreDescriptor {
-    name: "core/blocks";
-}
-
-export const store: BlocksStoreDescriptor;
+export const store: {
+    name: 'core/blocks';
+} & StoreDescriptor<
+    ReduxStoreConfig<
+        unknown,
+        typeof import('./store/actions'),
+        typeof import('./store/selectors')
+    >
+>;
 
 export type AxialDirection = "horizontal" | "vertical";
 
@@ -291,6 +295,7 @@ export interface Block<T extends Record<string, any> = {}> {
      * @see {@link https://developer.wordpress.org/block-editor/reference-guides/block-api/block-metadata/#context}
      */
     readonly usesContext?: string[];
+	readonly variations?: BlockVariation<T>[];
     /**
      * The current version number of the block, such as 1.0 or 1.0.3.
      *
diff --git a/node_modules/@types/wordpress__blocks/store/selectors.d.ts b/node_modules/@types/wordpress__blocks/store/selectors.d.ts
index 892c09e..1fee899 100644
--- a/node_modules/@types/wordpress__blocks/store/selectors.d.ts
+++ b/node_modules/@types/wordpress__blocks/store/selectors.d.ts
@@ -1,4 +1,4 @@
-import { Block, BlockStyle } from "../";
+import { Block, BlockStyle, BlockVariation } from '../';
 
 export {
     getBlockSupport,
@@ -33,3 +33,8 @@ export function getUnregisteredFallbackBlockName(): string | undefined;
  * search term, or false otherwise.
  */
 export function isMatchingSearchTerm(nameOrType: string | Block<any>, searchTerm: string): boolean;
+
+/**
+ * Returns the active block variation for a given block based on its attributes.
+ */
+export function getActiveBlockVariation( blockName: string, attributes: any, scope: any ): BlockVariation | undefined;
