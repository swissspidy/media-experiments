name: E2E Tests

on:
    push:
        branches:
            - main
    pull_request:

jobs:
    e2e-tests:
        name: 'E2E Tests (${{ matrix.wp }})'
        runs-on: ubuntu-latest
        continue-on-error: ${{ matrix.experimental == true }}
        strategy:
            fail-fast: false
            matrix:
                wp: ['latest']
                experimental: [false]
                include:
                    - wp: 'trunk'
                      experimental: true
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 15
                  cache: npm

            - name: Install dependencies
              run: npm ci

            - name: Build plugin
              run: npm run build

            - name: Configure WordPress version
              run: |
                  if [[ $WP_VERSION == 'trunk' ]]; then
                    echo "Using WordPress trunk"
                    echo "{\"core\":\"WordPress/WordPress#master\"}" >> .wp-env.override.json
                  fi
              env:
                  WP_VERSION: ${{ matrix.wp }}

            - name: Install WordPress
              run: |
                  chmod -R 767 ./ # TODO: Possibly integrate in wp-env
                  npm run wp-env start

            # Ensure the wp-content/languages folder exists and is writable.
            # See https://github.com/WordPress/gutenberg/issues/22515
            # and https://github.com/WordPress/gutenberg/tree/trunk/packages/env#installing-a-plugin-or-theme-on-the-development-instance
            - name: Prepare tests
              run: |
                  WP_ENV_DIR=$(npm run wp-env install-path --silent 2>&1 | head -1)
                  cd $WP_ENV_DIR
                  mkdir -p tests-WordPress/wp-content/languages tests-WordPress/wp-content/upgrade
                  chmod -R 767 tests-WordPress/wp-content/languages tests-WordPress/wp-content/upgrade
                  docker-compose run --rm -u $(id -u) -e HOME=/tmp tests-cli wp language core install de_CH de_DE es_ES fr_FR it_IT
                  cd -

            - name: Run tests
              run: npm run test:e2e -- --runInBand

            - name: Archive debug artifacts (screenshots, HTML snapshots)
              uses: actions/upload-artifact@v3
              if: always()
              with:
                  name: failures-artifacts
                  path: artifacts
