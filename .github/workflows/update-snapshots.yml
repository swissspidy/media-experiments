name: Update snapshots

on:
    workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
    # The concurrency group contains the workflow name and the branch name.
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

permissions:
    contents: write

jobs:
    update-snapshots:
        name: 'Update snapshots (${{ matrix.wp }}) (${{ matrix.shard }})'
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                wp: ['latest']
                shard: ['1/4', '2/4', '3/4', '4/4']
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  # 0 indicates all history for all branches and tags.
                  fetch-depth: 0

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version-file: '.nvmrc'
                  cache: npm

            - name: Install dependencies
              run: npm ci

            - name: Install Playwright browsers
              run: npx playwright install --with-deps

            - name: Build plugin
              run: npm run build
              env:
                  WP_DEVTOOL: source-map

            - name: Configure WordPress version
              run: |
                  if [[ $WP_VERSION == 'trunk' ]]; then
                    echo "Using WordPress trunk"
                    echo "{\"core\":\"WordPress/WordPress#master\"}" >> .wp-env.override.json
                  fi
              env:
                  WP_VERSION: ${{ matrix.wp }}

            - name: Install WordPress
              run: |
                  chmod -R 767 ./ # TODO: Possibly integrate in wp-env
                  npm run wp-env start

            # Ensure the wp-content/languages folder exists and is writable.
            # See https://github.com/WordPress/gutenberg/issues/22515
            # and https://github.com/WordPress/gutenberg/tree/trunk/packages/env#installing-a-plugin-or-theme-on-the-development-instance
            - name: Prepare tests
              run: |
                  WP_ENV_DIR=$(npm run wp-env install-path --silent 2>&1 | head -1)
                  cd $WP_ENV_DIR
                  mkdir -p tests-WordPress/wp-content/languages tests-WordPress/wp-content/upgrade
                  chmod -R 767 tests-WordPress/wp-content/languages tests-WordPress/wp-content/upgrade
                  docker-compose run --rm -u $(id -u) -e HOME=/tmp tests-cli wp language core install de_CH de_DE es_ES fr_FR it_IT
                  cd -

            - name: Run tests
              run: npm run test:e2e -- --shard=${{ matrix.shard }} --update-snapshots

            - name: Update snapshots
              if: always()
              run: |
                  git config --local user.email "swissspidy@users.noreply.github.com"
                  git config --local user.name "swissspidy-bot"
                  git add tests/e2e/**/__snapshots__/\*.jpeg
                  git status --short
                  git diff --staged --quiet && echo 'No changes to commit; exiting!' && exit 0
                  git commit -m "Update e2e snapshots"
                  git push origin
